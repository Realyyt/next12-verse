-- Create a function to handle new user signups
create or replace function public.handle_new_user()
returns trigger as $$
begin
  insert into public.profiles (id, name, username)
  values (
    new.id,
    new.raw_user_meta_data->>'full_name',
    new.raw_user_meta_data->>'username'
  );
  return new;
end;
$$ language plpgsql security definer;

-- Create a trigger to call the function when a new user signs up
create trigger on_auth_user_created
  after insert on auth.users
  for each row execute procedure public.handle_new_user();

-- Create a function to handle user metadata updates
create or replace function public.handle_user_update()
returns trigger as $$
begin
  update public.profiles
  set
    name = coalesce(new.raw_user_meta_data->>'full_name', name),
    username = coalesce(new.raw_user_meta_data->>'username', username),
    updated_at = now()
  where id = new.id;
  return new;
end;
$$ language plpgsql security definer;

-- Create a trigger to call the function when user metadata is updated
create trigger on_auth_user_updated
  after update on auth.users
  for each row execute procedure public.handle_user_update(); 